/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application

    id("java-library")

    // Add support for publishing build artifacts to an Apache Maven repository.
    id("maven-publish")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

publishing {
    publications {
        create<MavenPublication>("maven") {
            groupId = "org.arbitrary"
            artifactId = "arbitrary"
            version = "1.0"

            from(components["java"])
        }
    }
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation(libs.testng)

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }

    withJavadocJar()
    withSourcesJar()
}

application {
    // Define the main class for the application.
    mainClass = "org.arbitrary.App"
}

// Use a separate JVM process for the compiler and prevent compilation failures from failing the build.
tasks.compileJava {
    options.isIncremental = true
    options.isFork = true
    options.isFailOnError = false
}

tasks {
    javadoc {
        options {
            // Suppress javadoc console warnings.
            (this as CoreJavadocOptions).addBooleanOption("Xdoclint:none", true)
        }
    }
}

tasks.named<Test>("test") {
    // Use TestNG for unit tests.
    useTestNG()
}
